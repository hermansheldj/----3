from aiogram import types, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from keyboards.keyboards import cabinets_keyboard, main_menu_keyboard, request_access_keyboard
from database.crud import get_all_users, get_user_by_id, add_user
from config import ADMIN_ID
from utils.permissions import is_admin

async def start_cmd(msg: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await state.clear()
    
    if not msg.from_user:
        await msg.answer("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return
        
    user_id = msg.from_user.id
    user = get_user_by_id(user_id)
    
    if not user:
        username = msg.from_user.username or msg.from_user.first_name or "unknown"
        add_user(user_id, username, role='client')  # is_active=1 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        # –£–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∞
        try:
            await msg.bot.send_message(
                ADMIN_ID,
                f"üë§ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} (id={user_id}) –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ –±–æ—Ç–µ.")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞: {e}")
        await msg.answer("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.", reply_markup=main_menu_keyboard())
        return
    
    if not user[3]:  # is_active
        await msg.answer("üö´ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        return
    
    await msg.answer("üëã –ü—Ä–∏–≤–µ—Ç! –£–ø—Ä–∞–≤–ª—è–π –∫–∞–±–∏–Ω–µ—Ç–∞–º–∏ –ê–≤–∏—Ç–æ:", reply_markup=main_menu_keyboard())

async def cancel_cmd(msg: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cancel"""
    await state.clear()
    user_id = getattr(getattr(msg, 'from_user', None), 'id', None)
    if user_id is None:
        await msg.answer("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return
    await msg.answer("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=cabinets_keyboard(user_id))

async def help_cmd(msg: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
ü§ñ **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É:**

**–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
‚Ä¢ `/start` - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
‚Ä¢ `/cancel` - –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é
‚Ä¢ `/help` - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

**–§—É–Ω–∫—Ü–∏–∏:**
‚Ä¢ ‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç –ê–≤–∏—Ç–æ
‚Ä¢ ‚úèÔ∏è –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∫–∞–±–∏–Ω–µ—Ç
‚Ä¢ üóë –£–¥–∞–ª–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç
‚Ä¢ üìä –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–∞–ª–∞–Ω—Å–∞

**–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç:**
1. –ù–∞–∂–º–∏—Ç–µ "‚ûï –î–æ–±–∞–≤–∏—Ç—å"
2. –í–≤–µ–¥–∏—Ç–µ **Client ID**
3. –í–≤–µ–¥–∏—Ç–µ **Client Secret**
4. –í–≤–µ–¥–∏—Ç–µ **Advertiser ID**

**–ì–¥–µ –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ:**
‚Ä¢ **Client ID** –∏ **Client Secret** - –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ê–≤–∏—Ç–æ
‚Ä¢ **Advertiser ID** - ID –≤–∞—à–µ–≥–æ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞

**–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:** –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –Ω–∞ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ.
    """
    await msg.answer(help_text, parse_mode="Markdown")

async def show_main_menu(callback: types.CallbackQuery):
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
        user_id = callback.from_user.id
        user = get_user_by_id(user_id)
        
        if not user:
            await callback.answer("‚õîÔ∏è –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.", show_alert=True)
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if not user[3]:  # is_active
            await callback.answer("üö´ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.", show_alert=True)
            return
        
        is_admin_flag = is_admin(user_id)
        await callback.message.edit_text("üëã –ü—Ä–∏–≤–µ—Ç! –£–ø—Ä–∞–≤–ª—è–π –∫–∞–±–∏–Ω–µ—Ç–∞–º–∏ –ê–≤–∏—Ç–æ:", reply_markup=main_menu_keyboard(is_admin=is_admin_flag))
    except Exception:
        await callback.message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –£–ø—Ä–∞–≤–ª—è–π –∫–∞–±–∏–Ω–µ—Ç–∞–º–∏ –ê–≤–∏—Ç–æ:", reply_markup=main_menu_keyboard(is_admin=is_admin_flag)) 

async def request_access_callback(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É"""
    await callback.answer()
    
    data = callback.data
    if not data or not data.startswith("request_access_"):
        await callback.answer("–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö.", show_alert=True)
        return
    
    try:
        parts = data.split("_")
        user_id = int(parts[2])
        username = callback.from_user.username or callback.from_user.first_name or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    except (IndexError, ValueError):
        await callback.answer("–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö.", show_alert=True)
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    admin_message = (
        f"üîê **–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É**\n\n"
        f"üë§ **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** @{username}\n"
        f"üÜî **ID:** `{user_id}`\n"
        f"üìÖ **–î–∞—Ç–∞:** {callback.message.date.strftime('%d.%m.%Y %H:%M')}\n\n"
        f"–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:\n"
        f"`/admin` ‚Üí –î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞"
    )
    
    try:
        await callback.bot.send_message(
            ADMIN_ID,
            admin_message,
            parse_mode="Markdown"
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await callback.message.edit_text(
            "‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ—Å—Ç—É–ø –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!\n\n"
            "–ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å, –∫–æ–≥–¥–∞ –¥–æ—Å—Ç—É–ø –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω.",
            reply_markup=None
        )
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: {e}")
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω–∞–ø—Ä—è–º—É—é.",
            reply_markup=None
        ) 